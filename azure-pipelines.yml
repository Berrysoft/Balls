trigger:
- master

jobs:
- job: Build_Windows
  strategy:
    matrix:
      x64:
        target: 'x86_64-pc-windows-msvc'
        publishName: 'balls.win.x86_64'
      x86:
        target: 'i686-pc-windows-msvc'
        publishName: 'balls.win.i686'
      arm64:
        target: 'aarch64-pc-windows-msvc'
        publishName: 'balls.win.aarch64'
  pool:
    vmImage: windows-latest
  
  steps:
  - script: |
      rustup toolchain install nightly
      rustup +nightly target add $(target)
      cargo +nightly build --release --target $(target)
    displayName: "Build"

  - pwsh: |
      cd target/$(target)/release
      cp balls.exe $(Build.BinariesDirectory)/
      cp balls.pdb $(Build.BinariesDirectory)/
    displayName: 'Copy Binaries'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(publishName).zip'
    displayName: 'Archive'

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'publish'

- job: Build_Mac
  pool:
    vmImage: 'macOS-13'
  
  steps:
  - script: |
      rustup toolchain install nightly
      rustup +nightly target add x86_64-apple-darwin
      rustup +nightly target add aarch64-apple-darwin
    displayName: "Install toolchain"

  - script: |
      cargo +nightly build --release --workspace --exclude native --target x86_64-apple-darwin
    displayName: "Build x64"

  - script: |
      cargo +nightly build --release --workspace --exclude native --target aarch64-apple-darwin
    displayName: "Build arm64"

  - script: |
      macbundle/bundle.sh
      cp target/macbundle/balls.app.zip $(Build.ArtifactStagingDirectory)/balls.mac.app.zip
    displayName: "Create bundle"

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'publish'
